version: "3.9"

services:
  nginx:
    image:  nginx:1.25.3
    restart: unless-stopped
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/configuration/custom_proxy_settings.conf:/etc/nginx/conf.d/custom_proxy_settings.conf
    ports:
      - "80:80"
    networks:
      - yas-network
  identity:
    image: quay.io/keycloak/keycloak:21.0.2
    command: [ 'start-dev --import-realm' ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY: passthrough
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_HTTP_PORT: 80
    volumes:
      - ./identity/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./identity/themes/yas/theme:/opt/keycloak/themes
    networks:
      - yas-network
  backoffice:
    build: ./backoffice-bff
    image: ghcr.io/nashtech-garage/yas-backoffice-bff:latest
    entrypoint: ["./wait-for-it.sh", "identity:80", "--timeout=300", "--", "java", "-jar", "/backoffice-bff-0.0.1-SNAPSHOT.jar"]
    environment:
    - SPRING_PROFILES_ACTIVE=prod
      #SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://identity:8080/realms/Yas
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_ID=api
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_URI=http://nginx
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]=Path= /api/**
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_FILTERS[0]=RewritePath=/api/(?<segment>.*), /$$\{segment}
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_FILTERS[1]=TokenRelay=
    - SPRING_CLOUD_GATEWAY_ROUTES[1]_ID=nextjs
    - SPRING_CLOUD_GATEWAY_ROUTES[1]_URI=http://backoffice-nextjs:3000
    - SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]=Path= /**
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS    
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=backoffice-bff-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED 
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config            
    networks:
      - yas-network
  backoffice-nextjs:
    image: ghcr.io/nashtech-garage/yas-backoffice:latest
    networks:
    - yas-network
  storefront:
    build: ./storefront-bff
    image: ghcr.io/nashtech-garage/yas-storefront-bff:latest
    entrypoint: ["./wait-for-it.sh", "identity:80", "--timeout=300", "--", "java", "-jar", "/storefront-bff-0.0.1-SNAPSHOT.jar"]
    environment:
    - SPRING_PROFILES_ACTIVE=prod
      #SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://identity:8080/realms/Yas
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_ID=api
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_URI=http://nginx
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]=Path= /api/**
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_FILTERS[0]=RewritePath=/api/(?<segment>.*), /$$\{segment}
    - SPRING_CLOUD_GATEWAY_ROUTES[0]_FILTERS[1]=TokenRelay=
    - SPRING_CLOUD_GATEWAY_ROUTES[1]_ID=nextjs
    - SPRING_CLOUD_GATEWAY_ROUTES[1]_URI=http://storefront-nextjs:3000
    - SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]=Path= /**
    - YAS_SERVICES_CUSTOMER
    - YAS_SERVICES_CART
    - YAS_SERVICES_RATING
    - YAS_SERVICES_ORDER
    - YAS_SERVICES_LOCATION
    - YAS_SERVICES_INVENTORY
    - YAS_SERVICES_TAX
    - YAS_SERVICES_PROMOTION
    - YAS_SERVICES_PAYMENT
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=storefront-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED=false
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config      
    networks:
      - yas-network
  storefront-nextjs:
    image: ghcr.io/nashtech-garage/yas-storefront:latest
    networks:
      - yas-network
  media:
    build: ./media  
    image: ghcr.io/nashtech-garage/yas-media:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/media
    - SERVER_SERVLET_CONTEXT_PATH=/media
    - YAS_PUBLIC_URL=${YAS_PUBLIC_API_URL}/media
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS    
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=media-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED 
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  product:
    build: ./product
    image: ghcr.io/nashtech-garage/yas-product:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/product
    - SERVER_SERVLET_CONTEXT_PATH=/product
    - YAS_SERVICES_MEDIA
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS    
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=product-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED 
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  customer:
    build: ./customer  
    image: ghcr.io/nashtech-garage/yas-customer:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/customer
    - SERVER_SERVLET_CONTEXT_PATH=/customer
    - YAS_SERVICES_LOCATION
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS    
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=customer-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED 
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  cart:
    build: ./cart
    image: ghcr.io/nashtech-garage/yas-cart:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/cart
    - SERVER_SERVLET_CONTEXT_PATH=/cart
    - YAS_SERVICES_MEDIA
    - YAS_SERVICES_PRODUCT
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS    
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=cart-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED 
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  rating:
    build: ./rating  
    image: ghcr.io/nashtech-garage/yas-rating:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/rating
    - SERVER_SERVLET_CONTEXT_PATH=/rating
    - YAS_PUBLIC_URL=${YAS_PUBLIC_API_URL}/rating
    - YAS_SERVICES_PRODUCT
    - YAS_SERVICES_CUSTOMER
    - YAS_SERVICES_ORDER
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS    
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=rate-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED 
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  order:
    build: ./order
    image: ghcr.io/nashtech-garage/yas-order:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/order
    - SERVER_SERVLET_CONTEXT_PATH=/order
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS        
    - YAS_PUBLIC_URL=${YAS_PUBLIC_API_URL}/order
    - YAS_SERVICES_CART
    - YAS_SERVICES_CUSTOMER
    - YAS_SERVICES_PRODUCT
    - YAS_SERVICES_TAX
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=order-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED 
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  payment:
    build: ./payment
    image: ghcr.io/nashtech-garage/yas-payment:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/payment
    - SERVER_SERVLET_CONTEXT_PATH=/payment
    - YAS_PUBLIC_URL=${YAS_PUBLIC_API_URL}/payment
    - YAS_SERVICES_ORDER
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS    
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=payment-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED 
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  payment-paypal:
    build: ./payment-paypal  
    image: ghcr.io/nashtech-garage/yas-payment-paypal:latest
    environment:
    - SERVER_SERVLET_CONTEXT_PATH=/payment-paypal
    - YAS_PUBLIC_URL=http://storefront/complete-payment
    - YAS_SERVICES_PAYMENT
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=payment-paypal-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  location:
    build: ./location
    image: ghcr.io/nashtech-garage/yas-location:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/location
    - SERVER_SERVLET_CONTEXT_PATH=/location
    - YAS_PUBLIC_URL=${YAS_PUBLIC_API_URL}/location
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=location-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  inventory:
    build: ./inventory
    image: ghcr.io/nashtech-garage/yas-inventory:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/inventory
    - SERVER_SERVLET_CONTEXT_PATH=/inventory
    - YAS_PUBLIC_URL=${YAS_PUBLIC_API_URL}/inventory
    - YAS_SERVICES_PRODUCT
    - YAS_SERVICES_LOCATION
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=inventory-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
      - yas-network
  promotion:
    build: ./promotion  
    image: ghcr.io/nashtech-garage/yas-promotion:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/promotion
    - SERVER_SERVLET_CONTEXT_PATH=/promotion
    - YAS_PUBLIC_URL=${YAS_PUBLIC_API_URL}/promotion
    - YAS_SERVICES_PRODUCT
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=promotion-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config      
    networks:
      - yas-network
  tax:
    build: ./tax    
    image: ghcr.io/nashtech-garage/yas-tax:latest
    environment:
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tax
    - SERVER_SERVLET_CONTEXT_PATH=/tax
    - YAS_PUBLIC_URL=${YAS_PUBLIC_API_URL}/tax
    - YAS_SERVICES_LOCATION
    - SERVER_PORT
    - LOGGING_CONFIG
    - JAVA_TOOL_OPTIONS
    - OTEL_EXPORTER_OTLP_ENDPOINT
    - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    - OTEL_RESOURCE_ATTRIBUTES
    - OTEL_SERVICE_NAME=tax-service
    - OTEL_LOGS_EXPORTER
    - OTEL_TRACES_EXPORTER
    - OTEL_METRICS_EXPORTER
    - OTEL_INSTRUMENTATION_MESSAGING_EXPERIMENTAL_RECEIVE_TELEMETRY_ENABLED
    - OTEL_INSTRUMENTATION_LOGBACK-MDC_ADD-BAGGAGE
    - OTEL_JAVAAGENT_LOGGING
    - OTEL_JAVAAGENT_ENABLED
    - OTEL_JAVAAGENT_DEBUG
    volumes:
    - ./docker/libs/opentelemetry-javaagent_1.30.0.jar:/opentelemetry-javaagent.jar
    - ./deployment/app-config:/app-config
    networks:
    - yas-network
  swagger-ui:
    image: swaggerapi/swagger-ui:v4.16.0
    environment:
    - BASE_URL=/swagger-ui
    - URLS
    - OAUTH_CLIENT_ID=swagger-ui
    - OAUTH_USE_PKCE=true
    networks:
      - yas-network
  postgres:
    image: debezium/postgres:15-alpine-custom
    build: ./docker/postgres
    hostname: ${POSTGRES_HOST}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ./docker/postgres/postgresql.conf.sample:/usr/share/postgresql/postgresql.conf.sample
      - ./postgres_init.sql:/docker-entrypoint-initdb.d/postgres_init.sql
      - postgres:/var/lib/postgresql/data
    command: postgres -c 'max_connections=500'
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    networks:
      - yas-network
  pgadmin:
    image: dpage/pgadmin4:6.20
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@yas.com
      PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - yas-network
  zookeeper:
    image: debezium/zookeeper:2.2
    restart: always
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - yas-network
  kafka:
    image: confluentinc/cp-kafka:7.0.9
    hostname: ${KAFKA_SERVICE_HOST}
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_SERVICE_PORT}:${KAFKA_SERVICE_PORT}
      - 29092:29092
    environment:
      - KAFKA_BROKER_ID
      - KAFKA_ZOOKEEPER_CONNECT
      - KAFKA_ADVERTISED_LISTENERS
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
      - KAFKA_INTER_BROKER_LISTENER_NAME
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
    networks:
      - yas-network
  kafka-connect:
    image: debezium/connect:2.2
    restart: always
    ports:
      - 8083:8083
      - 5005:5005
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=kafka_connect_configs
      - OFFSET_STORAGE_TOPIC=kafka_connect_offsets
    networks:
      - yas-network
  akhq:
    image: tchiotludo/akhq:0.24.0
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: 'kafka:9092'
              connect:
                - name: "kafka-connect"
                  url: "http://kafka-connect:8083/"
    ports:
      - 8089:8080
    depends_on:
      - kafka
      - kafka-connect
    networks:
      - yas-network

  eventuate-cdc:
    image: eventuateio/eventuate-cdc-service:0.15.0.RELEASE
    ports:
      - "8099:8080"
    depends_on:
      - postgres
      - kafka
      - zookeeper
    networks:
      - yas-network
    environment:
      CDC_OPTS: "--debug"

      EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING: zookeeper:2181

      EVENTUATE_CDC_READER_READER1_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER1_DATASOURCEURL: jdbc:postgresql://postgres/order
      EVENTUATE_CDC_READER_READER1_MONITORINGSCHEMA: eventuate
      EVENTUATE_CDC_READER_READER1_DATASOURCEUSERNAME: admin
      EVENTUATE_CDC_READER_READER1_DATASOURCEPASSWORD: admin
      EVENTUATE_CDC_READER_READER1_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER1_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/order
      EVENTUATE_CDC_READER_READER1_OFFSETSTORAGETOPICNAME: db.history.common
      EVENTUATE_CDC_READER_READER1_OUTBOXID: 1
      EVENTUATE_CDC_READER_READER1_POSTGRESREPLICATIONSLOTNAME: eventuate_slot_order

      EVENTUATE_CDC_READER_READER2_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER2_DATASOURCEURL: jdbc:postgresql://postgres/cart
      EVENTUATE_CDC_READER_READER2_MONITORINGSCHEMA: eventuate
      EVENTUATE_CDC_READER_READER2_DATASOURCEUSERNAME: admin
      EVENTUATE_CDC_READER_READER2_DATASOURCEPASSWORD: admin
      EVENTUATE_CDC_READER_READER2_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER2_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/cart
      EVENTUATE_CDC_READER_READER2_OFFSETSTORAGETOPICNAME: db.history.common
      EVENTUATE_CDC_READER_READER2_OUTBOXID: 2
      EVENTUATE_CDC_READER_READER2_POSTGRESREPLICATIONSLOTNAME: eventuate_slot_cart

      EVENTUATE_CDC_READER_READER3_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER3_DATASOURCEURL: jdbc:postgresql://postgres/payment
      EVENTUATE_CDC_READER_READER3_MONITORINGSCHEMA: eventuate
      EVENTUATE_CDC_READER_READER3_DATASOURCEUSERNAME: admin
      EVENTUATE_CDC_READER_READER3_DATASOURCEPASSWORD: admin
      EVENTUATE_CDC_READER_READER3_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER3_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/payment
      EVENTUATE_CDC_READER_READER3_OFFSETSTORAGETOPICNAME: db.history.common
      EVENTUATE_CDC_READER_READER3_OUTBOXID: 3
      EVENTUATE_CDC_READER_READER3_POSTGRESREPLICATIONSLOTNAME: eventuate_slot_payment

      EVENTUATE_CDC_READER_READER4_TYPE: postgres-wal
      EVENTUATE_CDC_READER_READER4_DATASOURCEURL: jdbc:postgresql://postgres/product
      EVENTUATE_CDC_READER_READER4_MONITORINGSCHEMA: eventuate
      EVENTUATE_CDC_READER_READER4_DATASOURCEUSERNAME: admin
      EVENTUATE_CDC_READER_READER4_DATASOURCEPASSWORD: admin
      EVENTUATE_CDC_READER_READER4_DATASOURCEDRIVERCLASSNAME: org.postgresql.Driver
      EVENTUATE_CDC_READER_READER4_LEADERSHIPLOCKPATH: /eventuate/cdc/leader/product
      EVENTUATE_CDC_READER_READER4_OFFSETSTORAGETOPICNAME: db.history.common
      EVENTUATE_CDC_READER_READER4_OUTBOXID: 4
      EVENTUATE_CDC_READER_READER4_POSTGRESREPLICATIONSLOTNAME: eventuate_slot_product

      EVENTUATE_CDC_PIPELINE_PIPELINE1_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE1_READER: reader1
      EVENTUATE_CDC_PIPELINE_PIPELINE1_EVENTUATEDATABASESCHEMA: eventuate

      EVENTUATE_CDC_PIPELINE_PIPELINE2_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE2_READER: reader2
      EVENTUATE_CDC_PIPELINE_PIPELINE2_EVENTUATEDATABASESCHEMA: eventuate

      EVENTUATE_CDC_PIPELINE_PIPELINE3_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE3_READER: reader3
      EVENTUATE_CDC_PIPELINE_PIPELINE3_EVENTUATEDATABASESCHEMA: eventuate

      EVENTUATE_CDC_PIPELINE_PIPELINE4_TYPE: eventuate-tram
      EVENTUATE_CDC_PIPELINE_PIPELINE4_READER: reader4
      EVENTUATE_CDC_PIPELINE_PIPELINE4_EVENTUATEDATABASESCHEMA: eventuate

networks:
  yas-network:
    driver: bridge
    name: yas-network

volumes:
  postgres:
  pgadmin:
